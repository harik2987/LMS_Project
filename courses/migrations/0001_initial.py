# Generated by Django 4.2.17 on 2024-12-23 06:05

import courses.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0002_alter_customuser_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('content_type', models.CharField(
                    blank=True,
                    choices=[('SCORM', 'SCORM'), ('Video', 'Video'), ('Document', 'Document')],
                    help_text='The type of content for this course.',
                    max_length=50,
                    null=True
                )),
                ('content_file', models.FileField(
                    blank=True,
                    help_text='The file associated with this course (SCORM, Video, or Document).',
                    null=True,
                    upload_to=courses.models.content_file_path
                )),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(
                    blank=True,
                    help_text='The branch this course belongs to.',
                    null=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='courses',
                    to='users.branch'
                )),
                ('enrolled_users', models.ManyToManyField(
                    blank=True,
                    help_text='The learners enrolled in this course.',
                    limit_choices_to={'role': 'learner'},
                    related_name='enrolled_courses',
                    to=settings.AUTH_USER_MODEL
                )),
                ('instructor', models.ForeignKey(
                    blank=True,
                    help_text='The instructor assigned to this course.',
                    limit_choices_to={'role': 'instructor'},
                    null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    related_name='instructor_courses',
                    to=settings.AUTH_USER_MODEL
                )),
            ],
        ),
        migrations.CreateModel(
            name='SCORM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('launch_url', models.CharField(max_length=255)),
                ('version', models.CharField(default='SCORM 1.2', max_length=50)),
                ('runtime_tracking', models.JSONField(
                    blank=True,
                    default=dict,
                    help_text='Tracks learner progress, scores, and completion status.'
                )),
                ('time_spent', models.DecimalField(
                    decimal_places=2,
                    default=0.0,
                    help_text='Total time spent by the learner in hours.',
                    max_digits=6
                )),
                ('completion_status', models.CharField(
                    choices=[
                        ('not_started', 'Not Started'),
                        ('in_progress', 'In Progress'),
                        ('completed', 'Completed')
                    ],
                    default='not_started',
                    help_text='The current completion status of the SCORM package.',
                    max_length=20
                )),
                ('score', models.IntegerField(
                    blank=True,
                    help_text='The score returned from the SCORM package (if applicable).',
                    null=True
                )),
                ('last_accessed', models.DateTimeField(
                    auto_now=True,
                    help_text='The timestamp for the last access of the SCORM package.'
                )),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(
                    help_text='The course this SCORM package belongs to.',
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='scorms',
                    to='courses.course'
                )),
            ],
            options={
                'verbose_name': 'SCORM Package',
                'verbose_name_plural': 'SCORM Packages',
                'unique_together': {('course', 'title')},
            },
        ),
    ]
